{
	"info": {
		"_postman_id": "3e90a325-6eee-47b1-a9cd-1f8ffd45b183",
		"name": "Shoecart - Orders API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "261942"
	},
	"item": [
		{
			"name": "GET Request - Fetch all orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Request - Fetch a specific order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"pm.test(\"Response should be an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"First element of response should be an object\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0]).to.be.an('object');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php?order_id=3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					],
					"query": [
						{
							"key": "order_id",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Request - Fetch a limited number of orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an array with at most 2 orders\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array').that.has.lengthOf.at.most(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php?limit=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					],
					"query": [
						{
							"key": "limit",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request - (Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Order created');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"order_id\": 10,\r\n      \"user_id\": 1,\r\n      \"total_amount\": 100.00,\r\n      \"order_date\": \"2022-01-01\",\r\n      \"payment_method\": \"Credit Card\",\r\n      \"delivery_status\": \"Delivered\",\r\n      \"return_status\": \"No Return\",\r\n      \"orderdetails\": [\r\n          {\r\n              \"product_id\": 1,\r\n              \"quantity\": 2,\r\n              \"product_size\": 10\r\n          },\r\n          {\r\n              \"product_id\": 2,\r\n              \"quantity\": 1,\r\n              \"product_size\": 11\r\n          }\r\n      ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request - (Negative Case - Missing required fields)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Missing order data');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"total_amount\": 100.00,\r\n      \"order_date\": \"2022-01-01\",\r\n      \"payment_method\": \"Credit Card\",\r\n      \"delivery_status\": \"Delivered\",\r\n      \"return_status\": \"No Return\",\r\n      \"orderdetails\": [\r\n          {\r\n              \"product_id\": 1,\r\n              \"quantity\": 2,\r\n              \"product_size\": 10\r\n          },\r\n          {\r\n              \"product_id\": 2,\r\n              \"quantity\": 1,\r\n              \"product_size\": 11\r\n          }\r\n      ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Request(Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Order updated');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"order_id\": 10,\r\n      \"user_id\": 1,\r\n      \"total_amount\": 100.00,\r\n      \"order_date\": \"2022-01-01\",\r\n      \"payment_method\": \"Debit Card\",\r\n      \"delivery_status\": \"In Transit\",\r\n      \"return_status\": \"No Return\",\r\n      \"orderdetails\": [\r\n          {\r\n              \"product_id\": 1,\r\n              \"quantity\": 2,\r\n              \"product_size\": 10\r\n          },\r\n          {\r\n              \"product_id\": 2,\r\n              \"quantity\": 1,\r\n              \"product_size\": 11\r\n          }\r\n      ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php?order_id=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					],
					"query": [
						{
							"key": "order_id",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Request - Test with a non-existent order_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Order not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n      \"order_id\": 9999,\r\n      \"user_id\": 1,\r\n      \"total_amount\": 100.00,\r\n      \"order_date\": \"2022-01-01\",\r\n      \"payment_method\": \"Debit Card\",\r\n      \"delivery_status\": \"In Transit\",\r\n      \"return_status\": \"No Return\",\r\n      \"orderdetails\": [\r\n          {\r\n              \"product_id\": 1,\r\n              \"quantity\": 2,\r\n              \"product_size\": 10\r\n          },\r\n          {\r\n              \"product_id\": 2,\r\n              \"quantity\": 1,\r\n              \"product_size\": 11\r\n          }\r\n      ]\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php?order_id=9999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					],
					"query": [
						{
							"key": "order_id",
							"value": "9999"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Request - Test without order_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Invalid or missing data');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request - Positive Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Order deleted');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php?order_id=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					],
					"query": [
						{
							"key": "order_id",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request - Negative Case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Order not found');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/orders.php?order_id=100",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"orders.php"
					],
					"query": [
						{
							"key": "order_id",
							"value": "100"
						}
					]
				}
			},
			"response": []
		}
	]
}