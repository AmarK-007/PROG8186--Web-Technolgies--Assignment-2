{
	"info": {
		"_postman_id": "33423133-cb1c-4e0b-a189-dc088ccfc400",
		"name": "Shoecart - Carts API Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "261942"
	},
	"item": [
		{
			"name": "GET Request to Retrieve Cart Items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an array\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an('array');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php?user_id=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					],
					"query": [
						{
							"key": "user_id",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Request without User ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('User ID or Cart ID is missing.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Request for Non-Existent User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('No cart items found for this user.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php?user_id=9999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					],
					"query": [
						{
							"key": "user_id",
							"value": "9999"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request to Add Item to Cart (Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Item added to cart.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"user_id\": 1,\r\n        \"product_id\": 1,\r\n        \"quantity\": 2\r\n     }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST Request to Add Item to Cart (Negative Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Unable to create cart item. Data is incomplete.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"user_id\": 1,\r\n        \"product_id\": 1\r\n     }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Request to Update Cart Item (Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Cart item updated.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"user_id\": 1,\r\n        \"product_id\": 2,\r\n        \"quantity\": 3\r\n     }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php?cart_id=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					],
					"query": [
						{
							"key": "cart_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT Request to Update Cart Item (Negative Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Cart item not found.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"user_id\": 100,\r\n        \"product_id\": 100,\r\n        \"quantity\": 4\r\n     }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php?cart_id=1111",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					],
					"query": [
						{
							"key": "cart_id",
							"value": "1111"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request to Remove Cart Item (Positive Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with success message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Cart item deleted.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php?user_id=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					],
					"query": [
						{
							"key": "user_id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request to Remove Cart Item (Negative Case)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('Cart item not found.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php?cart_id=1111",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					],
					"query": [
						{
							"key": "cart_id",
							"value": "1111"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE Request without Cart ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"pm.test(\"Response should be an object with error message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property('message').eql('User ID or Cart ID is missing.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost/shoecart/server/api/cart.php",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"path": [
						"shoecart",
						"server",
						"api",
						"cart.php"
					]
				}
			},
			"response": []
		}
	]
}